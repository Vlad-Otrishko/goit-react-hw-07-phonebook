{"version":3,"sources":["components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css","services/APIService.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/Contact/Contact.module.css"],"names":["module","exports","url","api","readContacts","fetch","then","res","json","addContacts","contact","console","log","JSON","stringify","method","headers","body","deleteContacts","contactId","createAction","readContactsSuccess","readContactsError","addContactsSuccess","addContactsError","deleteContactsSuccess","deleteContactsError","filterItems","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","reset","className","s","form","onSubmit","preventDefault","id","a","message","wrapper","htmlFor","input","type","pattern","title","required","onChange","submitButton","Contact","record","spacing","ContactList","useEffect","result","items","useSelector","state","contacts","normalizedFilter","filter","toLowerCase","visibleList","includes","list","map","item","line","deleteButton","onClick","Filter","filterLabel","event","App","container","headline","createReducer","_","payload","phonebookRecords","newRecord","normalizedNewName","some","isUnique","alert","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bcc9e13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1kXTC\",\"line\":\"ContactList_line__22Pr0\",\"deleteButton\":\"ContactList_deleteButton__3ivaE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1sn4Y\",\"App-logo\":\"App_App-logo__KkjdP\",\"App-logo-spin\":\"App_App-logo-spin__3vqZp\",\"App-header\":\"App_App-header__3cEyg\",\"App-link\":\"App_App-link__2NzkC\",\"headline\":\"App_headline__3hn97\",\"container\":\"App_container__1V3uc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3NbYw\",\"filterLabel\":\"Filter_filterLabel__R66G0\"};","\r\nconst url = 'http://localhost:4040/contacts';\r\nconst readContacts = () => {\r\n    return fetch(url).then(res => res.json());\r\n        // .then(console.log);\r\n      }\r\nconst addContacts = (contact) => {\r\n    console.log('contact=', JSON.stringify(contact));\r\n    return fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: contact,\r\n    })\r\n      .then(res => res.json())\r\n      .then(console.log);\r\n}\r\n\r\n    const deleteContacts = contactId => {\r\n        return fetch(url+'/'+contactId, {\r\n        method: 'delete',\r\n    }\r\n    ).then(res=>res.json());\r\n\r\n    }\r\n\r\n    // eslint-disable-next-line import/no-anonymous-default-export\r\n    const api = { readContacts, addContacts, deleteContacts };\r\n    export default api;","import { createAction } from '@reduxjs/toolkit';\r\n\r\n export const readContacts = createAction('contacts/readContacts');\r\n export const readContactsSuccess = createAction('contacts/readContactsSuccess');\r\n export const readContactsError = createAction('contacts/readContactsError');\r\n\r\n export const addContacts = createAction('contacts/addContacts');\r\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\r\nexport const addContactsError = createAction('contacts/addContactsError');\r\n\r\n export const deleteContacts = createAction('contacts/deleteContacts');\r\n export const deleteContactsSuccess = createAction('contacts/deleteContactsSuccess');\r\n export const deleteContactsError = createAction('contacts/deleteContactsError');\r\n\r\n \r\n//  const addItem = createAction('contacts/add');\r\n//  const deleteItem = createAction('contacts/delete');\r\n export const filterItems = createAction('contacts/changeFilter');\r\n\r\n","import api from '../../services/APIService';\r\nimport {\r\n    readContacts,\r\n    readContactsSuccess,\r\n    readContactsError,\r\n    addContacts,\r\n    addContactsSuccess,\r\n    addContactsError,\r\n    deleteContacts,\r\n    deleteContactsSuccess,\r\n    deleteContactsError,\r\n} from './contacts-actions';\r\n\r\nconsole.log(api.readContacts());\r\n\r\n\r\nexport const readContactsRequest = () => async dispatch=> {\r\n    dispatch (readContacts());\r\ntry {\r\n    const result = await api.readContacts();\r\n    dispatch(readContactsSuccess(result));\r\n} catch (error) {\r\n    dispatch(readContactsError(error.message));\r\n    }\r\n}\r\n\r\nexport const addContactsRequest = (contact) => async dispatch=> {\r\n    dispatch (addContacts());\r\ntry {\r\n    await api.addContacts(contact);\r\n    dispatch(addContactsSuccess(contact));\r\n} catch (error) {\r\n    dispatch(addContactsError(error.message));\r\n    }\r\n}\r\n\r\nexport const deleteContactsRequest = (contactId) => async dispatch=> {\r\n    dispatch (deleteContacts());\r\ntry {\r\nawait api.deleteContacts(contactId);\r\n    dispatch(deleteContactsSuccess(contactId));\r\n} catch (error) {\r\n    dispatch(deleteContactsError(error.message));\r\n    }\r\n}\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addContactsRequest } from '../../redux/contacts/contacts-operations';\r\nimport shortid from 'shortid';\r\nimport s from './ContactForm.module.css';\r\n\r\nconst ContactForm = () => {\r\n  \r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n  const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name': setName(value);\r\n        break;\r\n      case 'number': setNumber(value);\r\n        break;\r\n      default: return;\r\n    }\r\n  };\r\n const  handleSubmit = e => {\r\n    e.preventDefault();\r\n   const id = shortid.generate();\r\n   dispatch(addContactsRequest({ name, number, id }));\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n      setName('');\r\n      setNumber('');\r\n  };\r\n\r\n    return (\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <div className={s.wrapper}>\r\n          <label htmlFor={nameInputId}>\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              id={nameInputId}\r\n              value={name}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <label htmlFor={numberInputId}>\r\n            Phone Number\r\n            <input\r\n              className={s.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              id={numberInputId}\r\n              value={number}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <button className={s.submitButton } type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n}\r\nexport default ContactForm;\r\n\r\n","import React from 'react';\r\nimport s from './Contact.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contact = ({ name, number }) => {\r\n    return (\r\n      <p className={s.record}>\r\n        <span className={s.name}> {name}</span> <span className={s.spacing}>:</span>\r\n        <span className={s.number}>{number}</span>\r\n      </p>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string,\r\n};\r\n","import {useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport api from '../../services/APIService';\r\nimport { readContactsRequest, deleteContactsRequest } from '../../redux/contacts/contacts-operations';\r\nimport Contact from '../Contact/Contact';\r\nimport s from './ContactList.module.css';\r\n\r\n\r\nconst ContactList = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    console.log(api.readContacts());\r\n    dispatch(readContactsRequest());\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []\r\n  );\r\n\r\n\r\n  const items = useSelector(state => state.contacts.items);\r\n  const filter = useSelector(state => state.contacts.filter);\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n  const visibleList = items.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter));\r\n\r\n    return (\r\n      <ul className={s.list}>\r\n        {visibleList.map(item => (\r\n          <li key={item.id} className={s.line}>\r\n            <Contact\r\n              name={item.name}\r\n              number={item.number}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              className={s.deleteButton}\r\n              onClick={() => dispatch(deleteContactsRequest(item.id))}\r\n            ></button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n\r\n};\r\n\r\nexport default ContactList;\r\n\r\n","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {filterItems} from '../../redux/contacts/contacts-actions';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(state => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n    return(\r\n    <label className={s.filterLabel}>\r\n        Search by name\r\n        <input type=\"text\" className={s.filter} value={value}\r\n          onChange={(event) => dispatch(filterItems(event.currentTarget.value))}\r\n        />\r\n        </label>\r\n        )\r\n}\r\n\r\n\r\nexport default Filter;\r\n\r\n","\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport s from './App.module.css';\n\n\nconst App = () => {\n  \n    return (\n      <div className={s.container}>\n        <h1 className={s.headline}>Phone book</h1>\n        <ContactForm/>\n        <h2 className={s.headline}>Contacts</h2>\n        <Filter/>\n        <ContactList/>\n      </div>\n    );\n\n}\nexport default App;\n","import {\r\n  readContactsSuccess,\r\n  addContactsSuccess,\r\n  deleteContactsSuccess,\r\n  filterItems,\r\n} from './contacts-actions';\r\nimport { combineReducers, createReducer } from '@reduxjs/toolkit';\r\n\r\n// {\r\n//   \"contacts\": [\r\n//     {\r\n//       \"id\": \"id-1\",\r\n//       \"name\": \"Rosie Simpson\",\r\n//       \"number\": \"459-12-56\"\r\n//     },\r\n//     {\r\n//       \"id\": \"id-2\",\r\n//       \"name\": \"Hermione Kline\",\r\n//       \"number\": \"443-89-12\"\r\n//     },\r\n//   { \"id\":\"id-3\",\r\n//      \"name\": \"Eden Clements\",\r\n//       \"number\": \"645-17-79\" },\r\n//   { \"id\": \"id-4\",\r\n//      \"name\": \"Annie Copeland\",\r\n//      \"number\": \"227-91-26\" }\r\n//   ]\r\n// }\r\n\r\nconst items = createReducer([], {\r\n  [readContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactsSuccess]: (state, { payload }) =>\r\n    isUnique(state, payload)\r\n      ? [...state, payload]\r\n      : alert('THIS NAME IS ALREADY PRESENT IN A PHONEBOOK'),\r\n  [deleteContactsSuccess]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\n\r\nconst filter = createReducer('', {\r\n  [filterItems]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n\r\nfunction isUnique (phonebookRecords, newRecord) {\r\n  const normalizedNewName = newRecord.name.toLowerCase();\r\n  return !phonebookRecords.some(\r\n    ({ name }) => name.toLowerCase() === normalizedNewName,\r\n  );\r\n}\r\n\r\n\r\n\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport {\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n    \r\n\r\nconst persistor = persistStore(store);\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n        <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__Zizry\",\"wrapper\":\"ContactForm_wrapper__3P4ZI\",\"input\":\"ContactForm_input__2Vf47\",\"submitButton\":\"ContactForm_submitButton__iPdwM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"record\":\"Contact_record__3442a\",\"name\":\"Contact_name__1HyIU\",\"number\":\"Contact_number__1BPs3\",\"spacing\":\"Contact_spacing__HuWNc\"};"],"sourceRoot":""}