{"version":3,"sources":["components/Contact/Contact.module.css","components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css","services/APIService.js","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-selectors.js","components/Contact/Contact.js","components/ContactList/ContactList.js","redux/contacts/contacts-actions.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","url","api","readContacts","fetch","then","res","json","addContacts","contact","console","log","JSON","stringify","method","headers","body","deleteContacts","contactId","createAsyncThunk","_","a","rejectWithValue","contacts","result","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","reset","className","s","form","onSubmit","preventDefault","id","wrapper","htmlFor","input","type","pattern","title","required","onChange","submitButton","getItems","state","items","getFilter","filter","getVisible","createSelector","normalizedFilter","toLowerCase","includes","Contact","record","spacing","ContactList","useEffect","visibleList","useSelector","contactsSelectors","list","map","item","line","phone","deleteButton","onClick","filterItems","createAction","Filter","filterLabel","event","App","container","headline","createReducer","fulfilled","payload","phonebookRecords","newRecord","normalizedNewName","some","isUnique","alert","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2006ab3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"record\":\"Contact_record__3442a\",\"name\":\"Contact_name__1HyIU\",\"number\":\"Contact_number__1BPs3\",\"spacing\":\"Contact_spacing__HuWNc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1kXTC\",\"line\":\"ContactList_line__22Pr0\",\"deleteButton\":\"ContactList_deleteButton__3ivaE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1sn4Y\",\"App-logo\":\"App_App-logo__KkjdP\",\"App-logo-spin\":\"App_App-logo-spin__3vqZp\",\"App-header\":\"App_App-header__3cEyg\",\"App-link\":\"App_App-link__2NzkC\",\"headline\":\"App_headline__3hn97\",\"container\":\"App_container__1V3uc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3NbYw\",\"filterLabel\":\"Filter_filterLabel__R66G0\"};","\r\nconst url = 'https://618eda9450e24d0017ce14a1.mockapi.io/contacts';\r\nconst readContacts = () => {\r\n    return fetch(url).then(res => res.json());\r\n      }\r\nconst addContacts = (contact) => {\r\n    console.log('contact=', JSON.stringify(contact));\r\n  return fetch(url, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(contact),\r\n  })\r\n}\r\n\r\n    const deleteContacts = contactId => {\r\n        return fetch(url+'/'+contactId, {\r\n        method: 'delete',\r\n    }\r\n    ).then(res=>res.json());\r\n\r\n    }\r\n\r\n    // eslint-disable-next-line import/no-anonymous-default-export\r\n    const api = { readContacts, addContacts, deleteContacts };\r\n    export default api;","import api from '../../services/APIService';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const readContacts = createAsyncThunk(\r\n  'contacts/readContacts',\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            const contacts = await api.readContacts();\r\n            return contacts;\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n  },\r\n);\r\n\r\nexport const addContacts = createAsyncThunk(\r\n  'contacts/addContacts',\r\n    async (contact, { rejectWithValue }) => {\r\n        try {\r\n          const result = await api.addContacts(contact).then(res => res.json());\r\n          return result;\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n  },\r\n);\r\n\r\n    \r\nexport const deleteContacts = createAsyncThunk(\r\n  'contacts/deleteContacts',\r\n    async (contactId, { rejectWithValue }) => {\r\n        try {\r\n            await api.deleteContacts(contactId);\r\n            return contactId;\r\n        } catch (error) {\r\n            return rejectWithValue(error);\r\n        }\r\n  },\r\n);\r\n  \r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addContacts } from '../../redux/contacts/contacts-operations';\r\nimport shortid from 'shortid';\r\nimport s from './ContactForm.module.css';\r\n\r\nconst ContactForm = () => {\r\n  \r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n  const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name': setName(value);\r\n        break;\r\n      case 'number': setNumber(value);\r\n        break;\r\n      default: return;\r\n    }\r\n  };\r\n const  handleSubmit = e => {\r\n    e.preventDefault();\r\n   const id = shortid.generate();\r\n   dispatch(addContacts({ name, 'phone':number,id}));\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n      setName('');\r\n      setNumber('');\r\n  };\r\n\r\n    return (\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <div className={s.wrapper}>\r\n          <label htmlFor={nameInputId}>\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              id={nameInputId}\r\n              value={name}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <label htmlFor={numberInputId}>\r\n            Phone Number\r\n            <input\r\n              className={s.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              id={numberInputId}\r\n              value={number}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <button className={s.submitButton } type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n}\r\nexport default ContactForm;\r\n\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getItems = state => state.contacts.items;\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getVisible = createSelector(\r\n    [getItems, getFilter],\r\n    (items, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n        return items.filter(({ name }) =>\r\n            name.toLowerCase().includes(normalizedFilter),\r\n        );\r\n        \r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getItems, getFilter,getVisible };","import React from 'react';\r\nimport s from './Contact.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contact = ({ name, number }) => {\r\n    return (\r\n      <p className={s.record}>\r\n        <span className={s.name}> {name}</span> <span className={s.spacing}>:</span>\r\n        <span className={s.number}>{number}</span>\r\n      </p>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string,\r\n};\r\n","import { useEffect } from 'react';\r\nimport contactsSelectors from '../../redux/contacts/contacts-selectors'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { readContacts, deleteContacts } from '../../redux/contacts/contacts-operations';\r\nimport Contact from '../Contact/Contact';\r\nimport s from './ContactList.module.css';\r\n\r\n\r\nconst ContactList = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(readContacts());\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []\r\n  );\r\n\r\n  const visibleList = useSelector(state=>contactsSelectors.getVisible(state));\r\n\r\n    return (\r\n      <ul className={s.list}>\r\n        {visibleList.map(item => (\r\n          <li key={item.id} className={s.line}>\r\n            <Contact\r\n              name={item.name}\r\n              number={item.phone}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              className={s.deleteButton}\r\n              onClick={() => dispatch(deleteContacts(item.id))}\r\n            ></button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n\r\n};\r\n\r\nexport default ContactList;\r\n\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n export const filterItems = createAction('contacts/changeFilter');\r\n\r\n","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {filterItems} from '../../redux/contacts/contacts-actions';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(state => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n    return(\r\n    <label className={s.filterLabel}>\r\n        Search by name\r\n        <input type=\"text\" className={s.filter} value={value}\r\n          onChange={(event) => dispatch(filterItems(event.currentTarget.value))}\r\n        />\r\n        </label>\r\n        )\r\n}\r\n\r\n\r\nexport default Filter;\r\n\r\n","\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport s from './App.module.css';\n\n\nconst App = () => {\n  \n    return (\n      <div className={s.container}>\n        <h1 className={s.headline}>Phone book</h1>\n        <ContactForm/>\n        <h2 className={s.headline}>Contacts</h2>\n        <Filter/>\n        <ContactList/>\n      </div>\n    );\n\n}\nexport default App;\n","import {\r\n  readContacts,\r\n  addContacts,\r\n  deleteContacts,\r\n} from './contacts-operations';\r\nimport { filterItems} from './contacts-actions';\r\n\r\nimport { combineReducers, createReducer } from '@reduxjs/toolkit';\r\n\r\nconst items = createReducer([], {\r\n  [readContacts.fulfilled]: (_, { payload }) => payload,\r\n  [addContacts.fulfilled]: (state, { payload }) =>\r\n    isUnique(state, payload)\r\n      ? [...state, payload]\r\n      : alert('THIS NAME IS ALREADY PRESENT IN A PHONEBOOK'),\r\n  [deleteContacts.fulfilled]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\n\r\nconst filter = createReducer('', {\r\n  [filterItems]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n\r\nfunction isUnique (phonebookRecords, newRecord) {\r\n  const normalizedNewName = newRecord.name.toLowerCase();\r\n  return !phonebookRecords.some(\r\n    ({ name }) => name.toLowerCase() === normalizedNewName,\r\n  );\r\n}\r\n\r\n\r\n\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport {\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n    \r\n\r\nconst persistor = persistStore(store);\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n        <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__Zizry\",\"wrapper\":\"ContactForm_wrapper__3P4ZI\",\"input\":\"ContactForm_input__2Vf47\",\"submitButton\":\"ContactForm_submitButton__iPdwM\"};"],"sourceRoot":""}